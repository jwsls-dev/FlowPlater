var DataExtractorPlugin=function(){"use strict";return()=>{const a={name:"data-extractor",enabled:!0,priority:0,version:"1.0.0",dependencies:[],optionalDependencies:[],settings:{debug:!1},description:"Transforms HTML with fp-data attributes into JSON data",author:"FlowPlater Team"};var t={instances:new Map};const r={processHtml(t){FlowPlater.log(FlowPlater.logLevels.DEBUG,"[DataExtractor] Processing HTML:",t);t=(new DOMParser).parseFromString(t,"text/html"),t=e.extractData(t.body)||{};return FlowPlater.log(FlowPlater.logLevels.DEBUG,"[DataExtractor] Extraction result:",t),t}},e={extractData(t){if(!t)return FlowPlater.log(FlowPlater.logLevels.DEBUG,"[DataExtractor] No element provided"),null;if(t.hasAttribute("fp-data")){var e=t.getAttribute("fp-data"),a=t.querySelectorAll("span[fp-data]");if(0<a.length){const n={};return a.forEach(t=>{var e=t.getAttribute("fp-data");n[e]=t.textContent.trim()}),{[e]:n}}return{[e]:t.textContent.trim()}}a=t.querySelectorAll("[fp-data]");if(0===a.length)return FlowPlater.log(FlowPlater.logLevels.INFO,"[DataExtractor] No data elements found"),{};const r={};return a.forEach(t=>{t.parentElement.hasAttribute("fp-data")||(t=this.extractData(t))&&Object.assign(r,t)}),r}};return{config:a,state:t,globalMethods:r,instanceMethods:e,hooks:{initComplete:function(t,e){return a.enabled&&a.settings.debug&&FlowPlater.log(FlowPlater.logLevels.INFO,a.name+" plugin initialized"),t}},transformers:{transformResponse:function(t,e,a){return e&&"html"===a&&t.element&&t.element.hasAttribute("fp-extract-data")?r.processHtml(e):e}}}}}();