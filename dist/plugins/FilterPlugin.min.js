var FilterPlugin=function(){"use strict";return()=>{function o(u,e){return Object.entries(e).every(([e,t])=>{var r,n,a,[e,i]=e.split(":"),e=u[e];if(!i){if(t.some(e=>"checkbox"===e.type))return r=e,0===(a=(n=t).filter(e=>"checkbox"===e.type&&e.checked)).length||(Array.isArray(r)?a.some(e=>r.includes(e.value)):1!==n.length||"checkbox"!==n[0].type||r===n[0].checked);if(t.some(e=>"radio"===e.type))return a=e,!(n=(n=t).find(e=>"radio"===e.type&&e.checked))||a===n.value;{var o=e;const c=t.find(e=>"text"===e.type);return!c||!c.value||(Array.isArray(o)?o.some(e=>e.toString().toLowerCase().includes(c.value.toLowerCase())):o.toString().toLowerCase().includes(c.value.toLowerCase()))}}var l=e,o=i,s=t[0].value;if(!s)return!0;switch(o){case"min":return l instanceof Date?new Date(l)>=new Date(s):l>=parseFloat(s);case"max":return l instanceof Date?new Date(l)<=new Date(s):l<=parseFloat(s);default:return!0}})}return{config:{name:"filter",enabled:!0,priority:0,version:"1.0.0",dependencies:[],optionalDependencies:[],settings:{debug:!1},description:"Filters data based on form inputs",author:"FlowPlater Team"},state:{instances:new Map},transformers:{transformDataBeforeRender:function(e,i,t){return i&&("json"!==t?FlowPlater.log(FlowPlater.logLevels.ERROR,"[FilterPlugin] Data type is not json. Skipping filter."):0!==(t=document.querySelectorAll(`[fp-filter-instance="${e.instanceName}"]`)).length&&t.forEach(e=>{var r=e.getAttribute("fp-filter");if(r){var n=r.split(".");let t=i;for(let e=0;e<n.length-1;e++)if(!(t=t[n[e]]))return;r=t[n[n.length-1]];if(Array.isArray(r)){const a={};e.querySelectorAll("[fp-filter-key]").forEach(e=>{var[t,,]=e.getAttribute("fp-filter-key").split(":");a[t]||(a[t]=[]),a[t].push(e)}),t[n[n.length-1]]=r.filter(e=>o(e,a))}}})),i}}}}}();