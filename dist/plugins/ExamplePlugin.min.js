var ExamplePlugin=function(){"use strict";return()=>{const a={name:"example",enabled:!0,priority:0,version:"1.0.0",dependencies:[],optionalDependencies:[],settings:{debug:!1,autoSave:!0}};return{config:a,state:{initialized:!1,data:{}},globalMethods:{exampleGetInstances(e){return Object.values(e.state.data)},exampleGetStats(e){return{totalInstances:Object.keys(e.state.data).length,enabled:e.config.enabled,settings:e.config.settings}}},instanceMethods:{exampleGetData(e){return e.data},exampleUpdateData(e,t){return e.update({...e.data,pluginData:{...e.data.pluginData,...t}}),e}},hooks:{beforeRequest:function(e){return FlowPlater.log(FlowPlater.logLevels.INFO,"beforeRequest",e),e},afterRequest:function(e){return FlowPlater.log(FlowPlater.logLevels.INFO,"afterRequest",e),e},beforeSwap:function(e){return FlowPlater.log(FlowPlater.logLevels.INFO,"beforeSwap",e),e},afterSwap:function(e){return FlowPlater.log(FlowPlater.logLevels.INFO,"afterSwap",e),e},newInstance:function(e){return FlowPlater.log(FlowPlater.logLevels.INFO,"newInstance",e),e},updateForm:function(e,t){return FlowPlater.log(FlowPlater.logLevels.INFO,"updateForm",e,t),e},updateData:function(e,t){return FlowPlater.log(FlowPlater.logLevels.INFO,"updateData",e,t),e},initComplete:function(e,t){return a.enabled&&FlowPlater.log(FlowPlater.logLevels.INFO,a.name+" plugin performing post-init setup"),e}}}}}();